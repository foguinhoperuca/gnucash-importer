* TODO [#A] implement a package version
** TODO [#B] dist
*** TODO [#A] pypi
*** TODO [#B] debian
**** TODO include in stable/dev
**** DONE Fix /usr/local && /usr for installation
**** DONE [#C] doc - https://wiki.debian.org/DebianPackageDocumentation
**** DONE Fix creation of softlink inside /usr/bin
**** DONE basic creation source/binary package
**** DONE tutorial
***** https://wiki.debian.org/Packaging
***** https://debian-handbook.info/
***** https://www.debian.org/doc/packaging-manuals/python-policy/
**** DONE [#A] source code
**** DONE [#B] binary
*** TODO [#C] ubuntu
**** TODO [#C] ubuntu PPA
*** TODO [#C] github
**** TODO upload binary (deb, snap, tarball)
**** DONE source code
** DONE build/compile
*** DONE manual install
*** DONE binary
**** DONE cx_freeze
**** DONE pyinstller
** DONE Enhance Make with wildly-know targets
** DONE pip/egg
** DONE implement basic layout
* TODO [#B] create data file (http://docs.python.org/3.4/distutils/setupscript.html#installing-additional-files)
* TODO [#B] implement abstract class PEP 3119 - https://docs.python.org/3/library/abc.html
* TODO [#B] log
** TODO [#B] write to file
** DONE basic implementation
** DONE color
* TODO [#C] implement doc
** TODO [#C] manual published in blogpost/social media
** TODO [#C] gnu manpage
** DONE source code with docstring
* TODO [#C] implement get total number of transactions
** TODO [#C] verify an implementation for gnucash-bind using gnucash_core_c.gnc_book_count_transactions(session.book)
** DONE implement manually
* TODO [#C] implement test
** TODO [#C] implement unittest discover --> python3 -m unittest discover
** DONE implement fixtures
** DONE Implement test coverage
** DONE Implement support to docker
** DONE implement a CI
*** DONE Travis-CI
**** DONE Add dependency: python3.6
**** DONE Add dependency: python3-gnucash
**** DONE Add support docker to run app (see ubuntu 18.04 and 18.10)
* TODO [#C] implement ncurses interface
* DONE use virtualenv
* DONE add CHANGELOG.md
* DONE implement config
* DONE FIXME gnucash_importer/read_entry.py#36: ResourceWarning: unclosed file <_io.TextIOWrapper name='example/local/nubank-2016-10.ofx' mode='r' encoding='UTF-8'> ofx = OfxParser.parse(open(report_file))
* DONE fix project name (from parser to something that can be used in debin/ubuntu/pypi)
* DONE implement a build tool (Makefile)
* DONE implement setup.py
* DONE implement requirement dependency
* DONE implement basic version to write
